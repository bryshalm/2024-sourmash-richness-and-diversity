knitr::opts_chunk$set(echo = TRUE)
library(phyloseq)
library(dplyr)
library(ggplot2)
# Read in the data
tax_table_ASV <- read.csv("../tables-matrices-dataframes/taxonomy_table_ps_ASV.csv", row.names = 1)
otu_table_ASV <- read.csv("../tables-matrices-dataframes/otu_table_ps_ASV.csv", row.names = 1)
met_dat <- read.csv("../tables-matrices-dataframes/sample-metadata-pollutants_pairs.csv")
# Convert to phyloseq object
taxa <- tax_table(as.matrix(tax_table_ASV))
otu <- otu_table(as.matrix(otu_table_ASV), taxa_are_rows = TRUE)
metad <- sample_data(as.data.frame(met_dat, row.names = met_dat$SampleID))
ps <- phyloseq(taxa, otu)
ps <- phyloseq(taxa, otu, metad)
# this remove samples that have a abundance less than 0
ps_sub <- ps %>%
prune_taxa(taxa_sums(.) > 0, .)
#
killi <- ps_sub %>%
subset_taxa(
Kingdom %in% c("Bacteria", "Archaea")
)
killi
# melt to long format (for ggploting)
killi_phylum <- killi %>%
tax_glom(taxrank = "Phylum") %>%                     # agglomerate at phylum level
transform_sample_counts(function(x) {x/sum(x)} ) %>% # Transform to rel. abundance
psmelt() %>%                                         # Melt to long format
filter(Abundance > 0.02) %>%                         # Filter out low abundance taxa
arrange(Phylum)                                      # Sort data frame alphabetically by phylum
# Set colors for plotting
phylum_colors <- c(
"#CBD588", "#5F7FC7", "orange","#DA5724", "#508578", "#CD9BCD",
"#AD6F3B", "#673770","#D14285", "#652926", "#C84248",
"#8569D5", "#5E738F","#D1A33D", "#8A7C64", "#599861", "blue", "lightblue1", "grey2", "blue4", "pink2", "tan"
)
# Plot
ggplot(killi_phylum, aes(x = Type, y = Abundance, fill = Phylum)) +
facet_grid(Pair~.) +
geom_bar(stat = "identity") +
scale_fill_manual(values = phylum_colors) +
# Remove x axis  title
theme(axis.title.x = element_blank()) +
#
guides(fill = guide_legend(reverse = TRUE, keywidth = 1, keyheight = 1)) +
ylab("Relative Abundance (Phyla > 2%) \n") +
ggtitle("Phylum Composition of Atlantic Killifish \n 16S Communities by Sampling Site w/ SILVA Taxonomy")
# Plot
taxonomy_whole_plot <- ggplot(killi_phylum, aes(x = interaction(Type, Pollution), y = Abundance, fill = Phylum, group = Pollution)) +
facet_grid(Pair~.) +
geom_bar(stat = "identity", position = "dodge") +
scale_fill_manual(values = phylum_colors) +
# Remove x axis  title
theme(axis.title.x = element_blank()) +
#
#scale_x_discrete(labels = sample_data(erie)$Pollution$) +  # Set x-axis labels
guides( fill = guide_legend(reverse = TRUE, keywidth = 1, keyheight = 1)) +
ylab("Relative Abundance (Phyla > 2%) \n") +
ggtitle("Phylum Composition of Atlantic Killifish \n Bacterial Communities by Sampling Site w/ SILVA Taxonomy")
# Adjust x-axis label size
# theme(axis.text.x = element_text(size = 12, angle= 90, hjust= 10)) # Change the size (e.g., 12 for a larger size)
taxonomy_whole_plot
# Create a new phyloseq object with only ASV27
killi_ASV27_ps <- subset_taxa(killi, rownames(tax_table(killi)) == "ASV27")
tax_table(killi_ASV27_ps)
sam_data(killi_ASV27_ps)
# Plot the relative abundance of ASV27
killi_ASV27_ps %>%
transform_sample_counts(function(x) {x/sum(x)}) %>%
psmelt() %>%
ggplot(aes(x = Type, y = Abundance, fill = Pollution)) +
geom_bar(stat = "identity") +
ylab("Relative Abundance") +
ggtitle("Relative Abundance of ASV27 by Sampling Site") +
theme(axis.title.x = element_blank()) +
theme(legend.position = "none") +
facet_grid(Pair ~ .)
# Make a vector with the important ASVs 27, 99, 79, 1207, 31, 77,752,9, 320, 598, 424, 82, 363, 20, 1041, 1420, 195, 178, 1004, 36
imp_asvs <- c("ASV27", "ASV99", "ASV79", "ASV1207", "ASV31", "ASV77", "ASV752", "ASV9", "ASV320", "ASV598", "ASV424", "ASV82", "ASV363", "ASV20", "ASV1041", "ASV1420", "ASV195", "ASV178", "ASV1004", "ASV36")
# Create a new phyloseq object with only the importants ASVs
killi_ASVs_ps <- subset_taxa(killi, rownames(tax_table(killi)) == imp_asvs)
tax_table(killi_ASVs_ps)
sam_data(killi_ASVs_ps)
# Plot the relative abundance of ASV27
killi_ASV27_ps %>%
transform_sample_counts(function(x) {x/sum(x)}) %>%
psmelt() %>%
ggplot(aes(x = Type, y = Abundance, fill = Pollution)) +
geom_bar(stat = "identity") +
ylab("Relative Abundance") +
ggtitle("Relative Abundance of ASV27 by Sampling Site") +
theme(axis.title.x = element_blank()) +
theme(legend.position = "none")
# Plot the relative abundance of the important ASVs
killi_ASVs_ps %>%
transform_sample_counts(function(x) {x/sum(x)}) %>%
psmelt() %>%
ggplot(aes(x = Type, y = Abundance, fill = Pollution)) +
geom_bar(stat = "identity") +
ylab("Relative Abundance") +
ggtitle("Relative Abundance of the Important ASVs by Sampling Site") +
theme(axis.title.x = element_blank()) +
theme(legend.position = "none") +
facet_grid(Pair ~ .)
# Plot the relative abundance of the important ASVs
killi_ASVs_ps %>%
transform_sample_counts(function(x) {x/sum(x)}) %>%
psmelt() %>%
ggplot(aes(x = Type, y = Abundance, fill = Phylum)) +
geom_bar(stat = "identity") +
ylab("Relative Abundance") +
ggtitle("Relative Abundance of the Important ASVs by Sampling Site") +
theme(axis.title.x = element_blank()) +
theme(legend.position = "none") +
facet_grid(Pair ~ .)
# Plot the relative abundance of the important ASVs
killi_ASVs_ps %>%
transform_sample_counts(function(x) {x/sum(x)}) %>%
psmelt() %>%
ggplot(aes(x = Type, y = Abundance, fill = Order)) +
geom_bar(stat = "identity") +
ylab("Relative Abundance") +
ggtitle("Relative Abundance of the Important ASVs by Sampling Site") +
theme(axis.title.x = element_blank()) +
theme(legend.position = "none") +
facet_grid(Pair ~ .)
# Plot the relative abundance of the important ASVs
killi_ASVs_ps %>%
transform_sample_counts(function(x) {x/sum(x)}) %>%
psmelt() %>%
ggplot(aes(x = Type, y = Abundance, fill = Class)) +
geom_bar(stat = "identity") +
ylab("Relative Abundance") +
ggtitle("Relative Abundance of the Important ASVs by Sampling Site") +
theme(axis.title.x = element_blank()) +
theme(legend.position = "none") +
facet_grid(Pair ~ .)
View(tax_table_ASV)
# Plot the relative abundance of the important ASVs
killi_ASVs_ps %>%
transform_sample_counts(function(x) {x/sum(x)}) %>%
psmelt() %>%
ggplot(aes(x = Type, y = Abundance, fill = Family)) +
geom_bar(stat = "identity") +
ylab("Relative Abundance") +
ggtitle("Relative Abundance of the Important ASVs by Sampling Site") +
theme(axis.title.x = element_blank()) +
theme(legend.position = "none") +
facet_grid(Pair ~ .)
# Plot the relative abundance of the important ASVs
killi_ASVs_ps %>%
transform_sample_counts(function(x) {x/sum(x)}) %>%
psmelt() %>%
ggplot(aes(x = Type, y = Abundance, fill = Pollution)) +
geom_bar(stat = "identity") +
ylab("Relative Abundance") +
ggtitle("Relative Abundance of the Important ASVs by Sampling Site") +
theme(axis.title.x = element_blank()) +
theme(legend.position = "none") +
facet_grid(Pair ~ .)
#Plot the relative abundance of the important ASVs
killi_ASVs_ps %>%
transform_sample_counts(function(x) {x/sum(x)}) %>%
psmelt() %>%
ggplot(aes(x = Type, y = Abundance, fill = Pollution)) +
geom_bar(stat = "identity") +
ylab("Relative Abundance") +
ggtitle("Relative Abundance of the Important ASVs by Sampling Site") +
theme(axis.title.x = element_blank()) +
theme(legend.position = "none")
# Plot the relative abundance of the important ASVs
killi_ASVs_ps %>%
transform_sample_counts(function(x) {x/sum(x)}) %>%
psmelt() %>%
ggplot(aes(x = interaction(Type, Pollution), y = Abundance, fill = Pollution, group = Pollution)) +
geom_bar(stat = "identity") +
ylab("Relative Abundance") +
ggtitle("Relative Abundance of the Important ASVs by Sampling Site") +
theme(axis.title.x = element_blank()) +
theme(legend.position = "none") +
facet_grid(Pair ~ .)
# Plot the relative abundance of the important ASVs
killi_ASVs_ps %>%
transform_sample_counts(function(x) {x/sum(x)}) %>%
psmelt() %>%
ggplot(aes(x = interaction(Type, Pollution), y = Abundance, fill = taxa, group = Pollution)) +
geom_bar(stat = "identity") +
ylab("Relative Abundance") +
ggtitle("Relative Abundance of the Important ASVs by Sampling Site") +
theme(axis.title.x = element_blank()) +
theme(legend.position = "none") +
facet_grid(Pair ~ .)
# Plot the relative abundance of the important ASVs
killi_ASVs_ps %>%
transform_sample_counts(function(x) {x/sum(x)}) %>%
psmelt() %>%
ggplot(aes(x = interaction(Type, Pollution), y = Abundance, fill = Genus, group = Pollution)) +
geom_bar(stat = "identity") +
ylab("Relative Abundance") +
ggtitle("Relative Abundance of the Important ASVs by Sampling Site") +
theme(axis.title.x = element_blank()) +
theme(legend.position = "none") +
facet_grid(Pair ~ .)
# Plot the relative abundance of the important ASVs
killi_ASVs_ps %>%
transform_sample_counts(function(x) {x/sum(x)}) %>%
psmelt() %>%
ggplot(aes(x = interaction(Type, Pollution), y = Abundance, fill = Pollution, group = Pollution)) +
geom_bar(stat = "identity") +
ylab("Relative Abundance") +
ggtitle("Relative Abundance of the Important ASVs by Sampling Site") +
theme(axis.title.x = element_blank()) +
theme(legend.position = "none") +
facet_grid(Pair ~ .)
knitr::opts_chunk$set(echo = FALSE)
install.packages("htmltools")
library("jpeg")
knitr::opts_chunk$set(echo = FALSE)
# Unload htmltools
unloadNamespace("htmltools")
knitr::opts_chunk$set(echo = TRUE)
# Install and load the required version of htmltools
install.packages("htmltools")
library(htmltools)
install.packages("htmltools")
knitr::opts_chunk$set(echo = TRUE)
# Install and load the required version of htmltools directly from source
devtools::install_version("htmltools", version = "0.5.7", repos = "http://cran.us.r-project.org")
# Install and load the required version of htmltools
install.packages("htmltools")
library(htmltools)
install.packages("htmltools")
install.packages("htmltools")
install.packages("htmltools")
install.packages("htmltools")
install.packages("htmltools")
packageVersion("htmltools")
knitr::opts_chunk$set(echo = TRUE)
# Install and load the required version of htmltools
install.packages("htmltools", version >= 0.5.7)
# Install devtools if you haven't already
install.packages("devtools")
# Load devtools
library(devtools)
# Install the required version of htmltools from CRAN
install_version("htmltools", version = "0.5.7", repos = "http://cran.us.r-project.org")
install.packages("htmltools")
install.packages(c("htmlTable", "htmltools", "htmlwidgets", "httpuv", "httr2", "readr", "rmarkdown", "RSQLite", "XML"))
install.packages("htmltools")
knitr::opts_chunk$set(echo = TRUE)
#install.packages("vegan")
library(vegan)
library(ggplot2)
library(phyloseq)
library(dplyr)
library(tidyverse)
# Example data (replace with your own data)
data <- matrix(c(10, 5, 3, 2, 1), nrow = 1)
# Calculate Shannon diversity index
shannon_index <- diversity(data, index = "shannon")
# Print the result
print(shannon_index)
# Create a bar plot
barplot(shannon_index, main = "Shannon Diversity Index",
xlab = "Sample", ylab = "Shannon Index", col = "skyblue")
# Load the dataset
SRR606249.gtdb.data <- read.csv("C:/Users/brysh/Desktop/2024-sourmash-richness-and-diversity/SRR606249.x.gtdb-rs214.with-lineages.csv")
# View the dataset
head(SRR606249.gtdb.data)
# to get the <- use the shotcut ctrl + alt + -
# Seperate the lineage column along the semicolon
SRR606249.gtdb.data <- separate(SRR606249.gtdb.data, lineage, c("domain", "phylum", "class", "order", "family", "genus", "species"), sep = ";")
head(SRR606249.gtdb.data)
table(SRR606249.gtdb.data$species)
# Number of rows in the dataset
num_rows <- nrow(SRR606249.gtdb.data)
# Add a new column
SRR606249.gtdb.data$microbe <- paste("microbe_" , 1:num_rows)
head(SRR606249.gtdb.data)
# Remove all columns except `f_unique_weighted` and microbe
otu_SRR60 <- SRR606249.gtdb.data %>%
select(f_unique_weighted, microbe, species)
head(otu_SRR60)
otu_SRR60_agg <- aggregate(f_unique_weighted ~ species, data = otu_SRR60, FUN = sum)
head(otu_SRR60_agg)
table(otu_SRR60_agg$species)
# Number of rows in the dataset
num_rows <- nrow(otu_SRR60_agg)
# Add a new column
otu_SRR60_agg$microbe <- paste("microbe_" , 1:num_rows)
head(otu_SRR60_agg)
# Make all rownames SRR606249
rownames(otu_SRR60_agg) <- otu_SRR60_agg$microbe
# Remove the microbe and species column
otu_SRR60_agg <- otu_SRR60_agg %>%
select(-microbe) %>%
select(-species)
head(otu_SRR60_agg)
# Transpose the dataset
otu_SRR60 <- t(otu_SRR60_agg)
head(otu_SRR60)
summary(otu_SRR60)
# Multipy every number in the dataset by 100000
otu_SRR60_multi <- otu_SRR60 * 100000
summary(otu_SRR60_multi)
# Convert the dataset to integers
otu_SRR60_integer <- apply(otu_SRR60_multi, 2, as.integer)
otu_SRR60_integer <- as.data.frame(otu_SRR60_integer)
otu_SRR60_integer <- t(otu_SRR60_integer)
head(otu_SRR60_integer)
# Indices calculation
diversity_richness <- estimateR(otu_SRR60_integer) # to calculate the richness
diversity_evenness <- diversity(otu_SRR60_integer)/ log(specnumber(otu_SRR60_integer)) # to calculate the evenness)
# Calculate Indices
diverisy_shannon <- diversity(otu_SRR60_integer, index = "shannon") # to calculate the shannon index
# combine the data
data_alphadiv <- cbind(t(diversity_richness), diverisy_shannon, diversity_evenness)
head(data_alphadiv)
# Remove all columns except `n_unique_found` and microbe
otu_SRR60_nuwf <- SRR606249.gtdb.data %>%
select(n_unique_weighted_found, microbe, species)
head(otu_SRR60_nuwf)
otu_SRR60_nuwf_agg <- aggregate(n_unique_weighted_found ~ species, data = otu_SRR60_nuwf, FUN = sum)
head(otu_SRR60_nuwf_agg)
table(otu_SRR60_nuwf_agg$species)
# Number of rows in the dataset
num_rows_nuwf <- nrow(otu_SRR60_nuwf_agg)
# Add a new column
otu_SRR60_nuwf_agg$microbe <- paste("microbe_" , 1:num_rows_nuwf)
head(otu_SRR60_nuwf_agg)
# Make all rownames SRR606249
rownames(otu_SRR60_nuwf_agg) <- otu_SRR60_nuwf_agg$microbe
# Remove the microbe and species column
otu_SRR60_nuwf_agg <- otu_SRR60_nuwf_agg %>%
select(-microbe) %>%
select(-species)
head(otu_SRR60_nuwf_agg)
# Transpose the dataset
otu_SRR60_nuwf <- t(otu_SRR60_nuwf_agg)
head(otu_SRR60_nuwf)
summary(otu_SRR60_nuwf)
# Indices calculation
diversity_richness.nuwf <- estimateR(otu_SRR60_nuwf) # to calculate the richness
diversity_evenness.nuwf <- diversity(otu_SRR60_nuwf)/ log(specnumber(otu_SRR60_nuwf)) # to calculate the evenness)
# Calculate Indices
diverisy_shannon.nuwf <- diversity(otu_SRR60_nuwf, index = "shannon") # to calculate the shannon index
# combine the data
data_alphadiv.nuwf <- cbind(t(diversity_richness.nuwf), diverisy_shannon.nuwf, diversity_evenness.nuwf)
head(data_alphadiv.nuwf)
# Remove columns from the otu_SRR60_nuwf_agg dataset
otu_SRR60_5dec <- otu_SRR60_nuwf[, -c(8, 13, 22, 30, 45)]
otu_SRR60_5dec <- as.matrix(otu_SRR60_5dec)
otu_SRR60_5dec <- t(otu_SRR60_5dec)
head(otu_SRR60_5dec)
# Indices calculation
diversity_richness.5dec <- estimateR(otu_SRR60_5dec) # to calculate the richness
diversity_evenness.5dec <- diversity(otu_SRR60_5dec)/ log(specnumber(otu_SRR60_5dec)) # to calculate the evenness)
# Calculate Indices
diverisy_shannon.5dec <- diversity(otu_SRR60_5dec, index = "shannon") # to calculate the shannon index
# combine the data
data_alphadiv.5dec <- cbind(t(diversity_richness.5dec), diverisy_shannon.5dec, diversity_evenness.5dec)
head(data_alphadiv.5dec)
# Remove columns from the otu_SRR60_nuwf_agg dataset
otu_SRR60_10dec <- otu_SRR60_nuwf[, -c(8, 13, 22, 30, 45, 2, 11, 20, 31, 41)]
otu_SRR60_10dec <- as.matrix(otu_SRR60_10dec)
otu_SRR60_10dec <- t(otu_SRR60_10dec)
head(otu_SRR60_10dec)
# Indices calculation
diversity_richness.10dec <- estimateR(otu_SRR60_10dec) # to calculate the richness
diversity_evenness.10dec <- diversity(otu_SRR60_10dec)/ log(specnumber(otu_SRR60_10dec)) # to calculate the evenness)
# Calculate Indices
diverisy_shannon.10dec <- diversity(otu_SRR60_10dec, index = "shannon") # to calculate the shannon index
# combine the data
data_alphadiv.10dec <- cbind(t(diversity_richness.10dec), diverisy_shannon.10dec, diversity_evenness.10dec)
head(data_alphadiv.10dec)
# Remove columns from the otu_SRR60_nuwf_agg dataset
otu_SRR60_20dec <- otu_SRR60_nuwf[, -c(8, 13, 22, 30, 45, 2, 11, 20, 31, 41, 2, 3, 4, 7, 15, 10, 24, 18, 19, 21)]
otu_SRR60_20dec <- as.matrix(otu_SRR60_20dec)
otu_SRR60_20dec <- t(otu_SRR60_20dec)
head(otu_SRR60_20dec)
# Indices calculation
diversity_richness.20dec <- estimateR(otu_SRR60_20dec) # to calculate the richness
diversity_evenness.20dec <- diversity(otu_SRR60_20dec)/ log(specnumber(otu_SRR60_20dec)) # to calculate the evenness)
# Calculate Indices
diverisy_shannon.20dec <- diversity(otu_SRR60_20dec, index = "shannon") # to calculate the shannon index
# combine the data
data_alphadiv.20dec <- cbind(t(diversity_richness.20dec), diverisy_shannon.20dec, diversity_evenness.20dec)
head(data_alphadiv.20dec)
rownames(data_alphadiv.5dec) <- "uni_w_found_5dec"
head(data_alphadiv.5dec)
rownames(data_alphadiv.10dec) <- "uni_w_found_10dec"
rownames(data_alphadiv.10dec) <- "uni_w_found_10dec"
head(data_alphadiv.10dec)
rownames(data_alphadiv.20dec) <- "uni_w_found_20dec"
head(data_alphadiv.20dec)
# combine the data
data_alphadiv_all <- rbind(data_alphadiv, data_alphadiv.nuwf, data_alphadiv.5dec, data_alphadiv.10dec, data_alphadiv.20dec)
head(data_alphadiv_all)
rownames(data_alphadiv) <- "f_unique_weighted"
head(data_alphadiv)
# combine the data
data_alphadiv_all <- rbind(data_alphadiv, data_alphadiv.nuwf, data_alphadiv.5dec, data_alphadiv.10dec, data_alphadiv.20dec)
head(data_alphadiv_all)
View(otu_SRR60)
View(SRR606249.gtdb.data)
View(otu_SRR60_agg)
View(otu_SRR60_nuwf_agg)
setwd("C:/Users/brysh/Desktop/2024-sourmash-richness-and-diversity/markdown_files")
